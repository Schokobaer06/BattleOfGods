buildscript {
    repositories {
        maven { url = 'https://repo.spongepowered.org/repository/maven-public/' }
    }
}
plugins {
    id 'eclipse'
    id 'idea'
    id 'maven-publish'
    id 'net.minecraftforge.gradle' version '[6.0,6.2)'
    id 'org.spongepowered.mixin' version '0.7.+'
}

version = '1.0'
group = 'com.schokobaer.battleofgods'
archivesBaseName = 'battleofgods'

java.toolchain.languageVersion = JavaLanguageVersion.of(17)

minecraft {
    mappings channel: 'official', version: '1.20.1'

    accessTransformer = file('src/main/resources/META-INF/accesstransformer.cfg')

    copyIdeResources = true

    runs {
        client {
            def mcreatorJvmOptions = System.getenv('MCREATOR_JVM_OPTIONS')
            if (mcreatorJvmOptions) {
                jvmArgs += mcreatorJvmOptions.split("\\s+").findAll { it.trim() }.toList()
            }
        }

        server {
        }

        configureEach {
            workingDirectory project.file('run')

            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'

            mods {
                examplemod {
                    source sourceSets.main
                }
            }
        }
        data {
            workingDirectory project.file('run')
            args '--mod', 'battleofgods', '--all', '--output', file('src/generated/resources/').absolutePath, '--existing', file('src/main/resources/').absolutePath
            mods {
                battleofgods {
                    source sourceSets.main
                }
            }
        }
    }
}

sourceSets {
    main {
        resources {
            srcDirs += 'src/generated/resources'
        }
    }
}


dependencies {
    minecraft 'net.minecraftforge:forge:1.20.1-47.3.0'
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8' // Use the UTF-8 charset for Java compilation
}

tasks.register('runDataTags') {
    group = 'mod'
    description = 'Runs the data generator to generate assets and data.'
    dependsOn 'runClient'
    doFirst {
        // Setze die Argumente f√ºr die Data Generation
        def args = ['--mod', 'battleofgods', '--all', '--output', file('src/generated/resources/')]
        runClient {
            args = args
        }
    }
    doLast {
        javaexec {
            mainClass = 'net.minecraftforge.data.Main'
            classpath = sourceSets.main.runtimeClasspath
            args = ['--mod', 'battleofgods', '--all', '--output', file('src/generated/resources/')]
        }
    }
}
/*
repositories {
    maven { url 'https://api.modrinth.com/maven' } // Better Combat
    maven { url "https://maven.shedaniel.me/" } // Cloth Config
}

dependencies {
    implementation fg.deobf('maven.modrinth:better-combat:1.8.6+1.20.1-forge')
    implementation fg.deobf("me.shedaniel.cloth:cloth-config-forge:11.1.136")
}

apply from: 'mcreator.gradle'

*/